data1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`檔號`[data2 & data1]
victims
victims <- data228$`個人名稱`[data1 & data2]
victims
class(victims)
victims
data1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[data1 & data2]
class(victims)
victims
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
tpe_highSchools
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
new_levels <- c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = new_levels)
tpe_highSchools
levels(tpe_highSchools)
levels(tpe_highSchools)
tpe_highSchools
new_levels <- c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = new_levels)
levels(tpe_highSchools)
tpe_highSchools
new_levels <- c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = new_levels)
levels(tpe_highSchools)
tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools), "北一女")
s1 = length(tpe_highSchools) + 1
s2 = s1 + 10
tpe_highSchools[s1:s2] = "北一女"
tpe_highSchools
levels(tpe_highSchools) <-
c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學","北一女")
tpe_highSchools[c(680,681,682,683,684,685,686,687,688,689)] <-
c(rep("北一女", times = 10))
tpe_highSchools
regex_hs1st <- "臺北市立第一女(中|子高級中學)*"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st<-"臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
regex_hs1st<-"臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺北市立第一女(中|子高級中學)*"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st<-"臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
`全宗名編號`<- factor(`全宗名編號`)
`全宗名編號`<-
str_extract(data228$`檔號`,"[:upper:][:graph:]+[:upper:](?=/)")
`全宗名編號`<- factor(`全宗名編號`)
`年`<- str_extract(data228$`檔號`,"(?<=/)[:alnum:]{4}(?=/)")
`全宗名編號`<-
str_extract(data228$`檔號`,"[:upper:][:graph:]+[:upper:](?=/)")
`全宗名編號`<- factor(`全宗名編號`)
`年`<- str_extract(data228$`檔號`,"(?<=/)[:alnum:]{4}(?=/)")
`年`<- as.integer(`年`)
data228$"全宗名編號" <- data228[[1]]
data228$"全宗名編號" <- str_sub(data228$"全宗名編號", 1, 11)
data228$"年" <- data228[[1]]
data228$"年" <- str_sub(data228$"年", 15, 16)
data228[c("全宗名編號","年")]
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
regex_hs1st <- "[臺|台]北市立第一女[子]*[高|級]*[中|學]*"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228$"全宗名編號" <- data228[[1]]
data228$"全宗名編號" <- str_sub(data228$"全宗名編號", 1, 11)
data228$"年" <- data228[[1]]
data228$"年" <- str_sub(data228$"年", 15, 16)
data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
str(data228)
`全宗名編號`<-
str_extract(data228$`檔號`,"[:upper:][:graph:]+[:upper:](?=/)")
`全宗名編號`<- factor(`全宗名編號`)
`年`<- str_extract(data228$`檔號`,"(?<=/)[:alnum:]{4}(?=/)")
`年`<- as.integer(`年`)
class(`全宗名編號`)
class(`年`)
data228[["全宗名編號"]]<- `全宗名編號`
data228[["年"]]<- `年`
data228[c("全宗名編號","年")]
data1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[data1 & data2]
class(victims)
victims
data_1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data_2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[data_1 & data_2]
class(victims)
victims
data_1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data_2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[data_1 & data_2]
class(victims)
victims
number_of_mention <- table(data228$`個人名稱`)
number_of_mention <- table(data228$`個人名稱`)
pick_name<- names(number_of_mention) %in% victims
num_01 <- number_of_mention[pick_name]
documentCount_eachVictim <-sort( as.integer(num_01),decreasing = T)
names(documentCount_eachVictim) <- names(a_num)
names(documentCount_eachVictim) <- names(num_01)
documentCount_eachVictim
k1 <- data228
k1$"個人名稱" <- factor(k1$"個人名稱", ordered = TRUE)
k1$"全宗名編號"[levels(k1$"個人名稱")]
number_of_mention <- table(data228$`個人名稱`)
pick_name<- names(number_of_mention) %in% victims
num_01 <- number_of_mention[pick_name]
documentCount_eachVictim <-sort( as.integer(num_01),decreasing = T)
names(documentCount_eachVictim) <- names(num_01)
documentCount_eachVictim
number_of_mention <- table(data228$`個人名稱`)
pick_name<- names(number_of_mention) %in% victims
num_01 <- number_of_mention[pick_name]
documentCount_eachVictim <-sort( as.integer(num_01),decreasing = T)
names(documentCount_eachVictim) <- names(num_01)
documentCount_eachVictim
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
T_F_table <- courseStructure$學年 == 103
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
T_F_table <- courseStructure$學年 == 103
T_F_major <- str_detect(courseStructure$應修系級, "經濟系3")
final_table <- T_F_table & T_F_major
econ101junior <- levels(factor(courseStructure$科目名稱[final_table]))
# econ101junior
T_F_table <- courseStructure$學年 == 103
T_F_major <- str_detect(courseStructure$應修系級, "經濟系3")
final_table <- T_F_table & T_F_major
econ101junior <- levels(factor(courseStructure$科目名稱[final_table]))
econ101junior
department<-str_extract(courseStructure$`應修系級`,"[:graph:]+系|組+[:digit:]")
majorGradeCombos<-unique(department)
majorGradeCombos
# majorGradeCombos
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
econ101junior
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
econ101junior
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
econ101junior
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
econ101junior
regex_hsTitle <-  "[高|級]*[中|學]*$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
class(econ101junior)
econ101junior
majorGradeCombosList <- str_split(courseStructure$`應修系級`, "、")
majorGradeCombosVec <- unlist(majorGradeCombosList)
majorGradeCombos <- unique(majorGradeCombosVec)
majorGradeCombos
majorGradeCombos
regex_hsTitle <-  "[高|級]*[中|學]*$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-  "[高|級]*[中|學]*$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
class(econ101junior)
econ101junior
map(courseStructure$`應修系級`,~ stringr::str_detect(.x) & enter_year) -> pick_econ
enter_year <- as.integer(courseStructure$`學年`) == entranceYear
map(courseStructure$`應修系級`,~ stringr::str_detect(.x) & enter_year) -> pick_econ
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
new_levels <- c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = new_levels)
levels(tpe_highSchools)
tpe_highSchools
levels(tpe_highSchools)
levels(tpe_highSchools) <-
c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學","北一女")
tpe_highSchools[c(680,681,682,683,684,685,686,687,688,689)] <-
c(rep("北一女", times = 10))
tpe_highSchools
regex_hs1st <- "臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-  "[高|級]*[中|學]*$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
str(data228)
`全宗名編號`<-
str_extract(data228$`檔號`,"[:upper:][:graph:]+[:upper:](?=/)")
`全宗名編號`<- factor(`全宗名編號`)
`年`<- str_extract(data228$`檔號`,"(?<=/)[:alnum:]{4}(?=/)")
`年`<- as.integer(`年`)
class(`全宗名編號`)
class(`年`)
data228[["全宗名編號"]]<- `全宗名編號`
data228[["年"]]<- `年`
data228[c("全宗名編號","年")]
data_1 <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data_2 <- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[data_1 & data_2]
class(victims)
victims
number_of_mention <- table(data228$`個人名稱`)
pick_name<- names(number_of_mention) %in% victims
num_01 <- number_of_mention[pick_name]
documentCount_eachVictim <-sort( as.integer(num_01),decreasing = T)
names(documentCount_eachVictim) <- names(num_01)
documentCount_eachVictim
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
enter_year <- courseStructure$`學年` == "103"
econ3 <- stringr::str_detect(courseStructure$`應修系級`,"經濟系3")
pick_vec = enter_year & econ3
econ101junior <- unique(courseStructure$`科目名稱`[pick_vec])
class(econ101junior)
econ101junior
# p=1.2的需求量
p=1.2
qd <- 10-5*p    #小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
# p=1.2的需求量
p=1.2
qd <- 10-5*p    #小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
demand <-           #創造一個物件叫demand
function(p){      #定義這個物件為函數
q_d <- 10-5*p}  #小心是5*p, 不能寫5p
p
qd
demand
demand
# p=1.2的需求量
demand(1.2)
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
demand(1.2)
demand_return(1.2)
.Last.value
# 要長久存在Global Environment要指定物件名稱（不要求與q_d同名）
demand_return(1.2) -> q_d1.2
q_d1.2
# 要長久存在Global Environment要指定物件名稱（不要求與q_d同名）
demand_return(1.2) -> q_d1.2
q_d1.2
demand_return(1.2) # 相當於
q_d <- 10-5*p}  #小心是5*p, 不能寫5p
q_d <- 10-5*p}  #小心是5*p, 不能寫5p
demand <-           #創造一個物件叫demand
function(p){      #定義這個物件為函數
q_d <- 10-5*p}  #小心是5*p, 不能寫5p
demand <-           #創造一個物件叫demand
function(p){      #定義這個物件為函數
q_d <- 10-5*p}  #小心是5*p, 不能寫5p
q_d <- 5
demand_return(p=1.2)
print(q_d)
demand_return <-
function(p){
q_s <- 0+2*p
return(q_s)
}
library(lubridate)
dateInput <- lubridate::today()
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") -> weather_next36hours
library(lubridate)
dateInput <- lubridate::today()
locationInput <- "新北市"
# 找出符合地點的天氣資訊：weatherAtLocation
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
# 在weatherAtLocation找出符合時間的天氣資訊
(weatherAtLocation$elementName=="MaxT") -> pick_MaxT
(weatherAtLocation$elementName=="MinT") -> pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
maxT
minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") -> weather_next36hours
askSilly_weather <- function(locationInput,dateInput){  #複製上方SOP
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") -> weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") -> pick_MaxT
(weatherAtLocation$elementName=="MinT") -> pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
askSilly_weather <- function(locationInput,dateInput){  #複製上方SOP
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") -> weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") -> pick_MaxT
(weatherAtLocation$elementName=="MinT") -> pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_w.eather("臺中市",today())
askSilly_weather("臺中市",today())
askSilly_weather("花蓮縣",today())
what_time_it_is("Europe/Paris")
return(now)
what_time_it_is <- function(timezone){
now <- with_tz(now(),tz=timezone)
return(now)
}
what_time_it_is("Europe/Paris")
now()
now()
now()
now()
library(lubridate)
what_time_it_is <- function(timezone){
now <- with_tz(now(),tz=timezone)
return(now)
}
what_time_it_is("Europe/Paris")
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
learning_topics <-
list(
subject = "函數",
date = lubridate::ymd("2020-06-03"),
functionsCreated = list(
demand = demand_return)
# 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身
)
learning_topics$functionsCreated$demand(1.2)
learning_topics$functionsCreated$demand(1.2)
typeof(demand_return)
typeof(demand_return)    #
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
intercept <- 10
slope <- -5     # 10-5*p
myDemand(1.2)
myDemand(1.2)
```{r}
slope <- -1     # 10-1*p
myDemand(1.2)
myDemand2 <- function(p, intercept=10, slope=-5){
q_d <- intercept + slope*p
return(q_d)
}
environment(myDemand2)
codetools::findGlobals(myDemand2)
environment(myDemand2)
codetools::findGlobals(myDemand2)
rm(intercept, slope)    #就算移除掉intercept/slope，也還是可以執行
rm(intercept, slope)    #就算移除掉intercept/slope，也還是可以執行
myDemand2(1.2)     #使用預設值
myDemand2(1.2, slope=-1)
myDemand2(1.2, intercept=5, slope=-1.2)
