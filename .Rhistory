vNum7 <- c(7,0,1,2)
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(7,0,1,2)
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(7,0,1,2)
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum1 <- -2
vNum2 <- c(3,5)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-2,3,5)
vNum5 <- c(c(-2),c(3,5))
vNum6 <- c()
vNum7 <- c(7,0,1,2)
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum1 <- -2
vNum2 <- c(3,5)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-2,3,5)
vNum5 <- c(c(-2),c(3,5))
vNum6 <- c()
vNum7 <- c(7,0,1,2)
vNum1 <- -2
vNum2 <- c(3,5)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-2,3,5)
vNum5 <- c(c(-2),c(3,5))
vNum6 <- c()
vNum7 <- c(7,0,1,2)
vNum7 <- c(vnum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
num1<-5 # 非整數
num2<-5L # 整數
num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
num1<-5 # 非整數
num2<-5L # 整數
num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
char1<-"你好"
char2<-'你好'
char1Vector<-c("你好","How are you?")
class("你好")
char1<-"你好"
char2<-'你好'
char1Vector<-c("你好","How are you?")
class("你好")
char1 <- 180
char1 <- 180
class(char1)
char1 <- hi
char1 <- "hi"
class(char1)
char1 <- 'hello'
class(char1)
char1 <- '180'
class(char1)
char1 <- '180'
class(char1)
char1 <- 180
class(char1)
char1 <- 180
char2 <- c("你好","How are you?")
class(char1)
class(char2)
char1 <- 7012
char2 <- "7012"
char3 <- c("你好",'How are you?')
class(char1)
class(char2)
class(char3)
char1 <- 7012
char2 <- "7012"
char3 <- c("你好",'How are you?')
class(char1)
class(char2)
class(char3)
dialogue <- c('小明說："明天不用上課。"',
'小花說："真的嗎？"')
cat(dialogue, sep="\n")
dialogue <- c('小明說："明天不用上課。"',
'小花說："真的嗎？"')
cat(dialogue, sep="\n")
dialogue <- c('小明說："明天不用上課。"',
'小花說："真的嗎？"')
cat(dialogue, sep="\n")
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
content() %>%
View()
library(googlesheets4)
`出席狀況表單網址` <-  # 缺乏定義值
"https://docs.google.com/spreadsheets/d/1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q/edit#gid=987577191"
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
char1 <- 7012
char2 <- "7012"
char3 <- c("你好",'How are you?')
class(char1)
class(char2)
class(char3)
vNum7 <- c(vNum7, vNum2)  #只有向量vNum2有疊代，本變數(vNum7)不疊代
vNum1 <- -2
vNum2 <- c(3,5)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-2,3,5)
vNum5 <- c(c(-2),c(3,5))
vNum6 <- c()
vNum7 <- c(7,0,1,2)
logi1 <- c(T,TRUE,F,FALSE,FALSE)
# 加總向量內的所有元素值。
sum(logi1)
logi1 <- c(T,TRUE,F,FALSE,FALSE)
sum(logi1)  #加總向量內的所有元素值
knitr::opts_chunk$set(echo = TRUE)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1.5, 2, 100)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)  #整數
typeof(char)
typeof(logi)
knitr::opts_chunk$set(echo = TRUE)
class(num)
class(int)
class(char)
class(logi)
class(num)
class(num)
class(num)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)  #整數
typeof(char)
typeof(logi)
class(num)
class(int)
class(char)
class(logi)
class(num)
class(int)
class(char)
class(logi)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_factor
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_factor
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_factor
typeof(majors10_factor)
class(majors10_factor)
typeof(majors10_factor)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_factor
majors10_char
majors10_factor
c("小明的生日是", 01_16)
c("小明今年的歲數是", 25)
c("小明今年的歲數是", 25)    # 25從數值變成字串形式儲存
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)    #character
class(majors10_char)
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)
class(majors10_factor)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_factor
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)    #integer 整數形式儲存
class(majors10_factor)    #facter
levels(majors10_factor)    #使用 levels 辨別 facter 的分類結果
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)    #character 字元形式儲存，佔檔案較大
class(majors10_char)    #character
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)    #integer 整數形式儲存
class(majors10_factor)    #facter
levels(majors10_factor)    #使用 levels 顯示 facter 的分類項目
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)    #character 字元形式儲存，佔檔案較大
class(majors10_char)    #character
majors10_factor <- factor(majors10_char)
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)    #character 字元形式儲存，佔檔案較大
class(majors10_char)    #character
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)    #integer 整數形式儲存
class(majors10_factor)    #facter
levels(majors10_factor)    #使用 levels 顯示 facter 的分類項目
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)    #integer 整數形式儲存，佔檔案記憶體較小
class(majors10_factor)    #facter
levels(majors10_factor)    #使用 levels 顯示 facter 的值分類項目
#社會學系 = 1，經濟學系 = 2
majors10_factor <- factor(majors10_char)
typeof(majors10_factor)    #integer 整數形式儲存，佔檔案記憶體較小
class(majors10_factor)    #facter
levels(majors10_factor)    #使用 levels 顯示 facter 的值分類項目
#社會學系 = 1，經濟學系 = 2  (對照表，依各台電腦跑出的結果為主)
majors10_char
majors10_char
majors10_factor
majors10_char
majors10_factor
trueInteger <- as.integer(stringInteger) #使用as轉換成整數(數值)形式
stringInteger <- c("1","2","-11")    #字串形式
class(stringInteger)    #無法進行數值運算
stringInteger <- c("1","2","-11")    #字串形式
class(stringInteger)    #無法進行數值運算
trueInteger <- as.integer(stringInteger) #使用as轉換成整數(數值)形式
class(trueInteger)    #可以進行數值運算
typeof(trueInteger)
trueInteger+2
trueInteger <- as.integer(stringInteger) #使用as轉換成整數(數值)形式
class(trueInteger)    #可以進行數值運算
typeof(trueInteger)
trueInteger+2
char3 <- c("小明","1","3")
as.integer(char3)
studentId <- c(410773002, 410773015)
studentId <- c(410773002, 410773015)
class(studentId)
as.character(studentId)
studentId <- c(410773002, 410773015)
studentId <- as.character(studentId)
class(studentId)
studentId <- c(410773002, 410773015)
studentId <- c(410773002, 410773015)
class(studentId)
as.character(studentId)
class(studentId)
studentId <- c(410773002, 410773015)
studentId <- as.character(studentId)
class(studentId)
studentId <- c(410773002, 410773015)
class(studentId)
studentId <- as.character(studentId)
class(studentId)
studentId <- c(410773002, 410773015)
studentId <- c(410773002, 410773015)
class(studentId)
as.character(studentId)
studentId <- c(410773002, 410773015)
class(studentId)
studentId <- as.character(studentId)
class(studentId)
studentId <- c(410773002, 410773015)    #學生學號
class(studentId)
studentId <- as.character(studentId)    #轉換成字串形式比較合理
class(studentId)
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeDateTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeDateTime
class(tpeDateTime)
typeof(tpeDateTime)
as.double(tpeDateTime)
tpeDateTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeDateTime
class(tpeDateTime)
typeof(tpeDateTime)
as.double(tpeDateTime)
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
ymd_hms("2020-03-11T06:56:17Z")
ymd_hms("2020-03-04T06:56:29Z",
tz="Asia/Taipei")
ymd_hms("2020-03-04T06:56:29Z",
tz="Europe/Lisbon")
ymd_hms("2020-03-11T06:56:17Z")
ymd_hms("2020-03-04T06:56:29Z",
tz="Asia/Taipei")
ymd_hms("2020-03-04T06:56:29Z",
tz="Europe/Lisbon")
ymd_hms("2020-03-11T06:56:17Z")
ymd_hms("2020-03-11T06:56:17Z")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
pgTime
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime    #直接顯示在下方彈出視窗
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime    #直接顯示在下方彈出視窗
class(tpeTime)
typeof(tpeTime)
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
pgTime    #直接顯示在下方彈出視窗
class(pgTime)
typeof(pgTime)
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime    #直接顯示在下方彈出視窗
class(tpeTime)    #Date/Time class (Date/Time形式)表現出來
#class所能代表的東西比type多，能加上更多限制、要求
typeof(tpeTime)    #秒數(數值形式)表現出來
as.double(tpeTime)
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
pgTime    #直接顯示在下方彈出視窗
class(pgTime)    #Date/Time class (Date/Time形式)表現出來
typeof(pgTime)    #秒數(數值形式)表現出來
as.double(pgTime)    #葡萄牙的此時間距離UTC時區 差異的總秒數
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime    #直接顯示在下方彈出視窗
class(tpeTime)    #Date/Time class (Date/Time形式)表現出來
#class所能代表的東西比type多，能加上更多限制、要求
typeof(tpeTime)    #秒數(數值形式)表現出來
as.double(tpeTime)    #台北的此時間距離UTC時區 差異的總秒數
ymd_hms("2020-03-11T06:56:17Z")
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
ymd_hms("2020-03-04T06:56:29Z",
tz="Asia/Taipei")
ymd_hms("2020-03-04T06:56:29Z",
tz="Europe/Lisbon")
ymd_hms("2020-03-11T06:56:17Z")
ymd_hms("2020-03-04T06:56:29Z",
tz="Asia/Taipei")
ymd_hms("2020-03-04T06:56:29Z",
tz="Europe/Lisbon")
ymd_hms("2020-03-04T06:56:29Z")
ymd_hms("2020-03-04T06:56:29Z",
tz="Asia/Taipei")
ymd_hms("2020-03-04T06:56:29Z",
tz="Europe/Lisbon")
ymd_hms("2020-03-04T06:56:29Z")
studentTime <- c(
ymd_hms("2020-03-04T08:16:53Z"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"))
studentTime
tpeTime <- c("2020-03-18 13:52:40",
"2020-03-11 03:12:40")
tpeTime <- ymd_hms(tpeTime,     #呼叫tpeTime向量值
tz="Asia/Taipei")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime    #直接顯示在下方彈出視窗
class(tpeTime)    #Date/Time class (Date/Time形式)表現出來
#class所能代表的東西比type多，能加上更多限制、要求
typeof(tpeTime)    #秒數(數值形式)表現出來
as.double(tpeTime)    #台北的此時間距離UTC時區 差異的總秒數
studentTime <- c(
ymd_hms("2020-03-04T08:16:53Z"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"))
studentTime
studentTime <- c(
ymd_hms("2020-03-04T08:16:53Z"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei")  )
studentTime
studentTime <- c(
ymd_hms("2020-03-04T08:16:53Z"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei"),
ymd_hms("2020-03-11 16:11:53",tz="Asia/Taipei") )
studentTime
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"),    # Date/Time class
"一芳",    # character
2,     # numeric
"水果茶"    # character
)
`小明交易1`
print(`小明交易1`)
